<launch>

<!-- SET UP STATIC TRANSFORMS -->
<arg name="optical_rotate" value="0 0 0.1 0 0 -2" />
<node pkg="tf" type="static_transform_publisher" name="map" args="$(arg optical_rotate) map usb_cam 100" /> 

<!-- RUN USB CAM -->
<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="1280" />
    <param name="image_height" value="720" />
    <param name="pixel_format" value="mjpeg" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap" />
    <param name="camera_info_url" value="file:///home/andrea/.ros/camera_info/head_camera.yaml" />
</node>

<!-- VISUALIZE USB CAM -->
<node name="usb_cam_image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/usb_cam/image_raw"/>
    <param name="autosize" value="true" />
</node>

<!-- TRACK AR TAGS -->
<arg name="marker_size" default="3" /> 
<arg name="max_new_marker_error" default="0.08" />
<arg name="max_track_error" default="0.2" />

<arg name="cam_image_topic" default="/usb_cam/image_raw" />
<arg name="cam_info_topic" default="/usb_cam/camera_info" />

<arg name="output_frame" default="/usb_cam" />

<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />

<!-- RUNS EXPERIMENTAL CODE 
<node pkg="robot_perception" name="test" type="test.py" output="screen" /> -->

</launch>
